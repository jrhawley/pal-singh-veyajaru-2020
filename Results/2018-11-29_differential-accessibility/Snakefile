import pandas as pd
import numpy as np
import itertools

CONFIG = pd.read_csv("config.csv", index_col=False)
BAMS = CONFIG["bamReads"].tolist()
CONDITIONS = np.unique(CONFIG["Condition"].tolist())
REPLICATES = np.unique(CONFIG["Replicate"].tolist())
CASES = ['Ctrl_Rep1', 'Ctrl_Rep2', 'Ctrl_Rep3',
         'MB6_Rep1', 'MB6_Rep2', 'MB6_Rep3']

COMPARISONS = ['mb6-ctrl', 'mb6pen-ctrl', 'mb6-mb6pen']

rule all:
    input:
        expand("Counts/{case}.sorted.bed", case=CASES)

rule map_counts:
    input:
        script = "generate-counts.sh",
        consensus = "../2018-11-28_global-accessbility/Consensus/consensus.Ctrl-MB6.bed",
        bam = BAMS
    output:
        expand("Counts/{case}.bed", case=CASES),
        expand("Counts/{case}.sorted.bed", case=CASES)
    shell:
        "qsub {input.script}"

rule diffbind:
    input:
        script = "diffbind.R",
        config = "config.csv"
    output:
        # results
        "DiffBind/diffbind-analysis.rds",
        "DiffBind/mb6-ctrl.all.tsv",
        "DiffBind/mb6-ctrl.significant-threshold.tsv",
        "DiffBind/mb6-ctrl.significant-threshold.bedGraph",
        "DiffBind/mb6pen-ctrl.all.tsv",
        "DiffBind/mb6pen-ctrl.significant-threshold.tsv",
        "DiffBind/mb6pen-ctrl.significant-threshold.bedGraph",
        "DiffBind/mb6-mb6pen.all.tsv",
        "DiffBind/mb6-mb6pen.significant-threshold.tsv",
        "DiffBind/mb6-mb6pen.significant-threshold.bedGraph",
        "DiffBind/mb6-ctrl.fdr-counts.tsv",
        "DiffBind/mb6-ctrl.fdr-proportions.tsv",
        # MB6 vs Ctrl plots
        "DiffBind/mb6-ctrl.volcano.pdf",
        "DiffBind/mb6-ctrl.boxplot.all.pdf",
        "DiffBind/mb6-ctrl.boxplot.dar.pdf",
        "DiffBind/mb6-ctrl.heatmap.affinity.pdf",
        "DiffBind/mb6-ctrl.heatmap.diffbind-corr.pdf",
        "DiffBind/mb6-ctrl.p-values.pdf",
        "DiffBind/mb6-ctrl.sig-thresh-sites.count.pdf",
        "DiffBind/mb6-ctrl.sig-thresh-sites.frac.pdf",
        "DiffBind/mb6-ctrl.ma.pdf",
        # plots for all samples
        "DiffBind/all.heatmap.read-count-corr.pdf",
        "DiffBind/all.heatmap.peak-caller-score.pdf",
        "DiffBind/all.pca.pdf",
    shell:
        "Rscript {input.script} {input.config} -o DiffBind"

# rule annotate:
#     input:
#         script = "annotate.R",
#         dars = "DiffBind/Filtered/EdgeR/diff-bound-sites.significant.tsv",
#         gencode = "../../Data/External/Gencode/gencode.v19.annotation.genes.bed"
#     output:
#         "DiffBind/Filtered/EdgeR/diff-bound-sites.significant.annotated.tsv"
#     shell:
#         "Rscript {input.script}"


# rule sort_dars:
#     input:
#         'DiffBind/Filtered/EdgeR/diff-bound-sites.{comp}.significant-threshold.bedGraph'
#     output:
#         'DiffBind/Filtered/EdgeR/diff-bound-sites.{comp}.significant-threshold.sorted.bedGraph'
#     shell:
#         'sort -k1,1 -k2,2n -V {input} > {output}'

rule aggregate_dars:
    input:
        'DiffBind/mb6-ctrl.significant-threshold.bedGraph',
        'DiffBind/mb6pen-ctrl.significant-threshold.bedGraph',
        'DiffBind/mb6-mb6pen.significant-threshold.bedGraph'
    output:
        'DiffBind/all.significant-threshold.sorted.bedGraph'
    shell:
        'cat {input} | bedtools merge -i stdin -c 5 -o min > {output}'
